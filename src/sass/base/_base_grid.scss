/**
  * @file
  * Cellular Grid
*/

.container {
  float: none;
  max-width: $grid-cell-max-width;
  margin: auto;
}

/*////*/
/* Grid Cells*/
/*///*/
/* Set common attributes.*/
#{$cells} {
  @include transition();

  position: relative;
  z-index: 1;
  display: block;
  float: left;

  &.center {
    margin: $grid-cell-margin + unquote("%") auto;
  }

  @if ($grid-cell-margin) {
    margin: $grid-cell-margin + unquote("%");
  }

  @if ($grid-cell-padding) {
    padding: $grid-cell-padding + unquote("%");
  }
}
/* .cell is functionally a row*/
.cell {
  @include clear();

  width: 100%;
}
/* Size individual cells & offsets.*/
@each $size in $grid-cells {
  $name: round($size);
  .cell-#{$name} {
    @if ($grid-flex == true) {
      flex-basis: $size + unquote("%");
      width: auto;
      max-width: $size + unquote("%");
      margin: auto;
    }

    @else {
      width: $size - $cell_space + unquote("%");
    }
  }

  @if ($grid-flex == false) {
    .offset-#{$name} {
      margin-left: $size + ($cell_space / 2) + unquote("%");
    }
  }
}

@if ($grid-flex == true) {
  .flex {
    display: flex;
    flex: 1 1 auto;
    flex-flow: row wrap;
    align-content: flex-start;
    align-items: stretch;
    justify-content: space-around;
    &.col {
      flex-direction: column;
    }
    &.row {
      flex-direction: row;
    }
  }
}

@include mediaquery($mediaquery-small) {
  /* Set all cells to single-column*/
  #{$cells} {
    width: 100% - $cell_space;

    @if ($grid-flex) {
      flex-basis: 100% - $cell_space;
      max-width: 100% - $cell_space;
    }
  }
  #{$offsets} {
    margin-left: $grid-cell-margin + unquote("%");
  }
}

/*///*/
/*Element positioning classes*/
/*///*/
.hidden {
  position: absolute;
  left: -9999px;
}

.clearfix {
  @include clear();
}

.left,
.right,
.center {
  display: block;
}

.left {
  float: left;
}

.right {
  float: right;
}

.center {
  @include clear();

  float: none;
  margin: $grid-cell-margin + unquote("%") auto;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9iYXNlX2dyaWQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0M7O0FBRUQ7RUFDRSxXQUFXO0VBQ1gsK0JBQStCO0VBQy9CLFlBQVk7QUFDZDs7QUFFQSxPQUFLO0FBQ0wsY0FBWTtBQUNaLE1BQUk7QUFDSiwwQkFBd0I7QUFDeEI7RUFDRSxxQkFBcUI7O0VBRXJCLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsY0FBYztFQUNkLFdBQVc7O0VBRVg7SUFDRSw2Q0FBNkM7RUFDL0M7O0VBRUE7SUFDRSx3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSwwQ0FBMEM7RUFDNUM7QUFDRjtBQUNBLCtCQUE2QjtBQUM3QjtFQUNFLGdCQUFnQjs7RUFFaEIsV0FBVztBQUNiO0FBQ0Esb0NBQWtDO0FBQ2xDO0VBQ0UsbUJBQW1CO0VBQ25CO0lBQ0U7TUFDRSxnQ0FBZ0M7TUFDaEMsV0FBVztNQUNYLCtCQUErQjtNQUMvQixZQUFZO0lBQ2Q7O0lBRUE7TUFDRSx5Q0FBeUM7SUFDM0M7RUFDRjs7RUFFQTtJQUNFO01BQ0UscURBQXFEO0lBQ3ZEO0VBQ0Y7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsYUFBYTtJQUNiLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLG9CQUFvQjtJQUNwQiw2QkFBNkI7SUFDN0I7TUFDRSxzQkFBc0I7SUFDeEI7SUFDQTtNQUNFLG1CQUFtQjtJQUNyQjtFQUNGO0FBQ0Y7O0FBRUE7RUFDRSxrQ0FBZ0M7RUFDaEM7SUFDRSx5QkFBeUI7O0lBRXpCO01BQ0UsOEJBQThCO01BQzlCLDZCQUE2QjtJQUMvQjtFQUNGO0VBQ0E7SUFDRSw2Q0FBNkM7RUFDL0M7QUFDRjs7QUFFQSxNQUFJO0FBQ0osOEJBQTRCO0FBQzVCLE1BQUk7QUFDSjtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7OztFQUdFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7O0VBRWhCLFdBQVc7RUFDWCw2Q0FBNkM7QUFDL0MiLCJmaWxlIjoiX2Jhc2VfZ3JpZC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAgKiBAZmlsZVxyXG4gICogQ2VsbHVsYXIgR3JpZFxyXG4qL1xyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgZmxvYXQ6IG5vbmU7XHJcbiAgbWF4LXdpZHRoOiAkZ3JpZC1jZWxsLW1heC13aWR0aDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi8vLy8vL1xyXG4vLyBHcmlkIENlbGxzXHJcbi8vLy8vXHJcbi8vIFNldCBjb21tb24gYXR0cmlidXRlcy5cclxuI3skY2VsbHN9IHtcclxuICBAaW5jbHVkZSB0cmFuc2l0aW9uKCk7XHJcblxyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB6LWluZGV4OiAxO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG5cclxuICAmLmNlbnRlciB7XHJcbiAgICBtYXJnaW46ICRncmlkLWNlbGwtbWFyZ2luICsgdW5xdW90ZShcIiVcIikgYXV0bztcclxuICB9XHJcblxyXG4gIEBpZiAoJGdyaWQtY2VsbC1tYXJnaW4pIHtcclxuICAgIG1hcmdpbjogJGdyaWQtY2VsbC1tYXJnaW4gKyB1bnF1b3RlKFwiJVwiKTtcclxuICB9XHJcblxyXG4gIEBpZiAoJGdyaWQtY2VsbC1wYWRkaW5nKSB7XHJcbiAgICBwYWRkaW5nOiAkZ3JpZC1jZWxsLXBhZGRpbmcgKyB1bnF1b3RlKFwiJVwiKTtcclxuICB9XHJcbn1cclxuLy8gLmNlbGwgaXMgZnVuY3Rpb25hbGx5IGEgcm93XHJcbi5jZWxsIHtcclxuICBAaW5jbHVkZSBjbGVhcigpO1xyXG5cclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4vLyBTaXplIGluZGl2aWR1YWwgY2VsbHMgJiBvZmZzZXRzLlxyXG5AZWFjaCAkc2l6ZSBpbiAkZ3JpZC1jZWxscyB7XHJcbiAgJG5hbWU6IHJvdW5kKCRzaXplKTtcclxuICAuY2VsbC0jeyRuYW1lfSB7XHJcbiAgICBAaWYgKCRncmlkLWZsZXggPT0gdHJ1ZSkge1xyXG4gICAgICBmbGV4LWJhc2lzOiAkc2l6ZSArIHVucXVvdGUoXCIlXCIpO1xyXG4gICAgICB3aWR0aDogYXV0bztcclxuICAgICAgbWF4LXdpZHRoOiAkc2l6ZSArIHVucXVvdGUoXCIlXCIpO1xyXG4gICAgICBtYXJnaW46IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgQGVsc2Uge1xyXG4gICAgICB3aWR0aDogJHNpemUgLSAkY2VsbF9zcGFjZSArIHVucXVvdGUoXCIlXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQGlmICgkZ3JpZC1mbGV4ID09IGZhbHNlKSB7XHJcbiAgICAub2Zmc2V0LSN7JG5hbWV9IHtcclxuICAgICAgbWFyZ2luLWxlZnQ6ICRzaXplICsgKCRjZWxsX3NwYWNlIC8gMikgKyB1bnF1b3RlKFwiJVwiKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBpZiAoJGdyaWQtZmxleCA9PSB0cnVlKSB7XHJcbiAgLmZsZXgge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXg6IDEgMSBhdXRvO1xyXG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgJi5jb2wge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG4gICAgJi5yb3cge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMCkgYW5kIChtYXgtd2lkdGg6ICRicmVha3BvaW50LXNtYWxsKSB7XHJcbiAgLy8gU2V0IGFsbCBjZWxscyB0byBzaW5nbGUtY29sdW1uXHJcbiAgI3skY2VsbHN9IHtcclxuICAgIHdpZHRoOiAxMDAlIC0gJGNlbGxfc3BhY2U7XHJcblxyXG4gICAgQGlmICgkZ3JpZC1mbGV4KSB7XHJcbiAgICAgIGZsZXgtYmFzaXM6IDEwMCUgLSAkY2VsbF9zcGFjZTtcclxuICAgICAgbWF4LXdpZHRoOiAxMDAlIC0gJGNlbGxfc3BhY2U7XHJcbiAgICB9XHJcbiAgfVxyXG4gICN7JG9mZnNldHN9IHtcclxuICAgIG1hcmdpbi1sZWZ0OiAkZ3JpZC1jZWxsLW1hcmdpbiArIHVucXVvdGUoXCIlXCIpO1xyXG4gIH1cclxufVxyXG5cclxuLy8vLy9cclxuLy9FbGVtZW50IHBvc2l0aW9uaW5nIGNsYXNzZXNcclxuLy8vLy9cclxuLmhpZGRlbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IC05OTk5cHg7XHJcbn1cclxuXHJcbi5jbGVhcmZpeCB7XHJcbiAgQGluY2x1ZGUgY2xlYXIoKTtcclxufVxyXG5cclxuLmxlZnQsXHJcbi5yaWdodCxcclxuLmNlbnRlciB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5sZWZ0IHtcclxuICBmbG9hdDogbGVmdDtcclxufVxyXG5cclxuLnJpZ2h0IHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi5jZW50ZXIge1xyXG4gIEBpbmNsdWRlIGNsZWFyKCk7XHJcblxyXG4gIGZsb2F0OiBub25lO1xyXG4gIG1hcmdpbjogJGdyaWQtY2VsbC1tYXJnaW4gKyB1bnF1b3RlKFwiJVwiKSBhdXRvO1xyXG59XHJcbiJdfQ== */