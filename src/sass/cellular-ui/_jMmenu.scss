/**
  * @file
  * CellularUI : jMMenu
*/

@include mediaquery($mediaquery-small) {
  #main-menu {
    ul.menu {
      /* Hides navigation prior to js loading & acting on DOM to prevent*/
      /* jankiness caused by js acting on the DOM.*/
      visibility: hidden;
    }
  }
}

.cellular {
  .jMmenu-trigger {
    @include border-radius();
    @include transition();

    z-index: 10;
    top: 1em !important;
    /* Wrqpper element, used as the menu trigger.*/
    float: right;
    width: 3em;
    height: 3em;
    padding: 0;
    cursor: pointer;
    border: 2px solid $color-primary;
    background-color: $color-primary-bg;
    background-image: url("../assets/icons/png/menu.png");
    background-image: url("../assets/icons/svg/menu.svg");
    background-repeat: no-repeat;
    background-position: left center;
    background-size: 9em;
    box-shadow: 0 0 0 0 $color-primary-bg;
    will-change: background-position, box-shadow;
    &:focus,
      &:hover {
      box-shadow: 0 0 0.2em 0.1em $color-hilight;
    }
    &.active {
      /* Shift background to indicate state.*/
      background-position: right center;
      &:focus,
        &:hover {
        box-shadow: 0 0 0.2em 0.1em $color-error;
      }
    }
  }
  .jMmenu-triggertext {
    position: absolute;
    right: 0;
    bottom: -1.4em;
    left: 0;
    text-align: center;
    color: $color-neutral;
    font-family: $heading-font;
    font-size: 0.8em;
    line-height: 1em;
  }
  /* Styling for actual menu*/
  .jMmenu-menu {
    @include transition();
    /*Styling for menu & links.*/
    position: $region-header-position;
    z-index: 999;
    top: $header_height;
    /*opacity: 0;*/
    overflow: hidden;
    margin: 0;
    transform: translate3d(0, 0, 0);
    background-color: rgba($color-primary-bg, 0.7);
    li {
      display: block;
      max-width: none;
      margin: auto;
      list-style: none;
      &.parent {
        a {
          cursor: pointer;
        }
        &:after {
          @include triangle(0.8em, 0.6em, $color-secondary, "down");
          @include transition();

          top: 1em;
          right: 0.2em;
        }
        &.active:after,
          &:focus:after,
          &:hover:after {
          @include triangle(0.8em, 0.6em, $color-hilight, "down");

          transform: rotateY(180deg);
        }
      }
    }
    .child {
      z-index: 1;
      border-left: $color-neutral 1px solid;
      li {
        overflow: hidden;
        max-height: 0;
        transition: max-height 0.25s;
        border: $color-secondary 1px solid;
        border-radius: 0.8em;
      }
      &.active {
        > li {
          max-height: 32em;
          transition: max-height 0.5s ease-in;
        }
      }
    }
    a {
      &,
      &:visited {
        @include box-shadow();

        display: block;
        height: 1em;
        padding: 0.6em 1em 0.8em;
        text-decoration: none;
        color: $color-secondary;
        border-bottom: 1px solid;
        background-color: $color-primary-bg;
        background-image: none;
        font-family: $heading-font;
        font-size: 0.9em;
        font-weight: bold;
      }
      &:active,
        &:focus,
        &:hover {
        color: $color-hilight;
        background-color: $color-primary-bg;
      }
    }
    .active > a {
      color: $color-hilight;
      background-color: $color-primary-bg;
    }
    ul {
      /* Styling for nested menus.*/
      margin: 0 0 0 0.8em;
    }
  }
  /* Styles applied after js loads*/
  /* Outside of media query since the size may change (i.e. reorient tablet) but*/
  /* the interface should be consistent- cellularui.js doesn't listen for resize*/
  /* events, and the menu needs to be available at all screen sizes.*/
  /* Styling common to top navigation.*/
  /*&.push-down,*/
  &.slide-down {
    .jMmenu-menu {
      right: 0;
      bottom: $header_height;
      left: 0;
      width: 100%;
      height: 0;
      &.active {
        bottom: 0;
        height: 100%;
      }
    }
  }
  /* Styling common to side navigation.*/
  &.push-left,
  &.push-right,
  &.slide-left,
  &.slide-right {
    .jMmenu-menu {
      bottom: 0;
      width: 0;
      max-width: 0;
      &.active {
        width: 100%;
        max-width: 50%;
      }
    }
  }
  /* Position left menus.*/
  &.push-left,
  &.slide-left {
    .jMmenu-menu {
      left: 0;
    }
  }
  /* Position right menus.*/
  &.push-right,
  &.slide-right {
    .jMmenu-menu {
      right: 0;
    }
  }
  /* Styles applied to page elements.*/
  &.jMmenu-active {
    &.push-left,
    &.push-right {
      /* Push #page-wrap over to keep content visible when .jMmenu is active.*/
      #content {
        width: 50%;
      }
    }
    &.push-down {
      #content {
        width: 50%;
      }
    }
  }
}
/*# sourceMappingURL=data:application/json;base64, */