/**
  * @file
  * CSS loading indicators.
  * http://codepen.io/TaniaLD/pen/oKxep
  * http://projects.lukehaas.me/css-loaders/
  * https://github.com/jh3y/whirl/
*/

$i_color: #fff;
$i_size: 1em;
$i_border: 0.3em;
$i_speed: 2s;
$i_ease: linear;
/*@import 'animations'*/

@mixin loader(
  $name: null,
  $url: null,
  $size: $i_size,
  $color: $i_color,
  $speed: $i_speed
) {
  /*  */
  position: relative;
  padding-right: $size;

  &:after {
    position: absolute;
    z-index: 10;
    top: 0;
    right: -($size * 2);
    display: block;
    width: $size;
    height: $size;
    content: "";
    /*margin: 0 ($size * .5);*/

    @if $name == "img" {
      background-image: url($url);
      background-repeat: no-repeat;
      background-position: 50% 50%;
    }

    @if $name == "bar" {
      @include bar($size, $color, $speed);
    }

    @if $name == "clock" {
      @include clock($size, $color, $speed);
    }

    @if $name == "cdots" {
      @include cdots($size, $color, $speed);
    }

    @if $name == "dots" {
      @include dots($size, $color, $speed);
    }

    @if $name == "hourglass" {
      @include hourglass($size, $color, $speed);
    }

    @if $name == "prop" {
      @include prop($size, $color, $speed);
    }

    @if $name == "ring" {
      @include ring($size, $color, $speed);
    }

    @if $name == "ring1" {
      @include ring1($size, $color, $speed);
    }

    @if $name == "spin1" {
      @include spin1($size, $color, $speed);
    }

    @if $name == "spinna" {
      @include spinna($size, $color, $speed);
    }

    @if $name == "wave" {
      @include wave($size, $color, $speed);
    }
  }
}

@mixin bar($size, $color, $speed) {
  $height: $size / 5;

  @include ani_bar();

  /*  */
  height: $height;
  padding: ($size * 0.1) 0;
  background-color: rgba($color, 0.1);

  &:before,
  &:after {
    position: absolute;
    top: 0;
    left: 0;
    width: 98%;
    height: $height;
    padding: ($size * 0.1) 1%;
  }
  &:before {
    z-index: 0;
    width: 0;
    height: $height;
    content: "";
    transform-origin: 98% 0%;
    animation: bar $speed ease-in-out infinite;
    background-color: rgba($color, 0.1);
  }
  &:after {
    z-index: 1;
    width: 100%;
    height: $height;
    content: "Loading...";
    color: $color;
    font-size: $size * 0.2;
    line-height: $height;
  }
}

@mixin clock($size, $color, $speed) {
  $border: ($size * 0.1);
  $ease: $i_ease;

  @include ani_spin();

  border: $border solid rgba($color, 0.8);
  border-radius: 50%;

  /*  */
  background-color: rgba($color, 0.2);

  &:before,
  &:after {
    position: absolute;
    top: $size/2;
    left: $size / 2;
    width: $border/2;
    content: "";
    transform-origin: 0 0 $size;
    background-color: $color;
  }
  &:before {
    height: $size / 2;
    animation: spin $speed $ease infinite;
  }
  /* 'minute' hand*/
  &:after {
    top: ($size / 2) - (($size / 2)/8);
    left: ($size / 2) - (($size / 2)/8);
    width: $size / 8;
    height: $size / 8;
    border-radius: 50%;
    background-color: $color;
  }
}

@mixin cdots($size, $color, $speed) {
  $size: $size / 3;
  $ease: ease-in-out;

  /*  */
  left: $size;
  width: $size;
  height: $size;
  border: ($size * 0.1) darken($color, 10%) solid;
  border-radius: 50%;
  background-color: rgba($color, 0.5);
  /*animation: alpha $speed $ease infinite;*/

  &:before,
  &:after {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    width: $size;
    height: $size;
    content: "";
    border: ($size * 0.1) darken($color, 10%) solid;
    border-radius: 50%;
  }
  &:before {
    animation: orbit $speed $ease infinite;
    background-color: rgba(adjust-hue($color, -120deg), 0.25);
  }
  &:after {
    animation: orbit $speed $ease infinite;
    animation-delay: $speed/2;
    background-color: rgba(adjust-hue($color, 120deg), 0.25);
  }
}

@mixin dots($size, $color, $speed) {
  $size: $size / 3;
  $delay: $speed / 3;
  $ease: $i_ease;

  @include ani_alpha();

  /*  */
  left: $size;
  width: $size;
  height: $size;
  animation: alpha $speed $ease infinite;
  animation-delay: none;
  border-radius: 50%;
  background-color: $color;

  &:before,
  &:after {
    position: absolute;
    z-index: 1;
    top: 0;
    width: $size;
    height: $size;
    content: "";
    animation: alpha $speed $ease infinite;
    border-radius: 50%;
    background-color: $color;
  }
  &:before {
    left: -150%;
    animation-delay: -$delay;
  }
  &:after {
    left: 150%;
    animation-delay: $delay;
  }
}

@mixin hourglass($size, $color, $speed) {
  $border: ($size * 0.1);
  $ease: ease-in-out;

  /* Reset size for pseudo elements */
  $size: $size * 0.4;
  $ss: $size * 0.75;

  @include ani_spin();

  width: $size;

  /*  */
  height: $size;
  transform-origin: 50% 50%;
  animation: spin $speed $ease infinite;
  border: ($size * 0.1) solid darken($color, 10%);
  border-radius: 50%;

  &:before,
  &:after {
    position: absolute;
    left: $size * 0.5;
    width: 0;
    height: 0;
    content: "";
    border-style: solid;
  }
  &:before {
    top: $size * 0.3;
    transform-origin: 50% 0;
    border-width: $size $ss 0 $ss;
    border-color: $color transparent transparent transparent;
  }
  &:after {
    top: $size + ($size * 0.2);
    transform-origin: 50% 100%;
    border-width: 0 $ss $size $ss;
    border-color: transparent transparent $color transparent;
  }
}

@mixin prop($size, $color, $speed) {
  $bsize: $size * 0.1;
  $border: $bsize solid $color;
  $ease: $i_ease;
  /*$p: ($size / 2) + ($bsize/2);*/
  $p: ($size / 2) + ($bsize);

  @include ani_spin();

  /*  */
  /*background: rgba(white, 0.5);*/
  /*border-radius: 50%;*/

  &:before,
  &:after {
    position: absolute;
    width: $size/2;
    height: $size/2;
    content: "";
    animation: spin $speed $ease infinite;
    border-color: $color;
    background-color: rgba($color, 0.2);
  }
  &:before {
    bottom: -$bsize;
    left: -$bsize;
    transform-origin: 100% 0;
    border-bottom: $border;
    border-left: $border;
    border-radius: 0 0 0 $size;
  }
  &:after {
    top: -$bsize;
    right: -$bsize;
    transform-origin: 0 100%;
    border-top: $border;
    border-right: $border;
    border-radius: 0 $size 0 0;
  }
}

@mixin ring($size, $color, $speed) {
  $border: ($size * 0.1);
  $ease: $i_ease;

  @include ani_spin();

  /*  */
  & {
    width: $size;
    height: $size;
    transform-origin: 50% 50%;
    animation: spin $speed $ease infinite;
    border: $border solid rgba($color, 0.5);
    border-radius: $size;

    &:before,
    &:after {
    }
    &:before {
    }
    &:after {
      position: absolute;
      width: $size / 3;
      height: $size / 3;
      content: "";
      border-radius: $size / 3;
      background-color: $color;
    }
  }
}

@mixin ring1($size, $color, $speed) {
  $opacity: 0.2;
  $border: $size * 0.2;
  $c2: rgba($color, $opacity);
  $ease: $i_ease;

  @include ani_spin();

  /*  */
  width: $size;
  height: $size;
  animation: spin $speed $ease infinite;
  border-top: $border solid $c2;
  border-right: $border solid $c2;
  border-bottom: $border solid $c2;
  border-left: $border solid $color;
  border-radius: 50%;

  &:after {
    width: $size;
    height: $size;
    border-radius: 50%;
  }
}

@mixin spinna($size, $color, $speed) {
  $ease: $i_ease;

  @include ani_spin();

  /*  */
  & {
    box-sizing: border-box;
    width: $size;
    height: $size;
    transform-origin: 50% 50%;
    animation: spin $speed $ease infinite;
    border-width: $size;
    border-style: double;
    border-color: transparent $color;
    border-radius: 50%;
    background-color: rgba($color, 0.2);

    &:before,
    &:after {
    }
    &:before {
    }
    &:after {
    }
  }
}

@mixin wave($size, $color, $speed) {
  $height: $size * 0.66;
  $size: $size * 0.25;
  $delay: $speed/3;
  $ease: $i_ease;

  @include ani_bounce();

  /*  */
  left: $size;
  width: $size;
  height: $height;
  transform-origin: 50% 0%;
  animation: bounce $speed $ease infinite;
  animation-delay: $delay;
  background-color: $color;

  &:before,
  &:after {
    position: absolute;
    width: $size;
    height: $height;
    content: "";
    transform-origin: 50% 0%;
    animation: bounce $speed $ease infinite;
    background-color: $color;
  }
  &:before {
    left: -120%;
    animation-delay: 0;
  }
  &:after {
    left: 120%;
    animation-delay: $delay * 2;
  }
}
/*# sourceMappingURL=data:application/json;base64, */