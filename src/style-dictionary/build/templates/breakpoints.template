# DO NOT EDIT DIRECTLY
# @see ./style-dictionary /build/templates/mediaquerys.template, /build/build.js, /tokens/globals/mediaquery.json, /config.json
# Generated on <% print(new Date().toString()) %>
<%
var theme = "",
mediaquery = {},
allProperties = _.each(allProperties, function(prop) {
    
      if(prop.name === "mediaquery_small"){
      mediaquery.small = prop.value;
      }
      if(prop.name === "mediaquery_narrow"){
      mediaquery.narrow = prop.value;
      }
      if(prop.name === "mediaquery_default"){
      mediaquery.default = prop.value;
      }
      if(prop.name === "mediaquery_large"){
      mediaquery.large = prop.value;
      }
      
      if(prop.name === "info_name"){
      theme = prop.value.toLowerCase();
      }
}); 
/*
_.each(allProperties, function(prop) {
    // Notice: this is an alternative way to use Lodash templating syntax,
    // that uses string concatenation and the print() function to have
    // more control over the indentation, whitespace, newlines, etc.
    var output = "";
    output += "\t<" + prop.tag + " name=\"" + prop.name + "\">";
    output += prop.value;
    output += "</" + prop.tag + ">";
    if(prop.comment) {
    output += "<!-- " + prop.comment + " -->";
    }
    output += "\n";
    print(output);
});
*/
%>
<% print(theme) %>.screen.small:
  label: small
  mediaQuery: <% print(mediaquery.small) %>
  weight: 1
  group: screen
  multipliers:
    - 1x
    - 2x

<% print(theme) %>.screen.narrow:
  label: narrow
  mediaQuery: <% print(mediaquery.narrow) %>
  weight: 1
  group: screen
  multipliers:
    - 1x
    - 2x

<% print(theme) %>.screen.default:
  label: default
  mediaQuery: <% print(mediaquery.default) %>
  weight: 1
  group: screen
  multipliers:
    - 1x
    - 2x

<% print(theme) %>.screen.large:
  label: large
  mediaQuery: <% print(mediaquery.large) %>
  weight: 1
  group: screen
  multipliers:
    - 1x
    - 2x