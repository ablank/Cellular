# DO NOT EDIT DIRECTLY
# @see ./style-dictionary /drupal/info.json, /build/templates/info.template
# Generated on <% print(new Date().toString()) %>
<%
var theme = {},
allProperties = _.each(allProperties, function(prop) {    
    if(prop.attributes.category === 'info') {
      //console.log(prop);
      if(prop.name === "info_name"){
      theme.name = prop.value;
      }
      if(prop.name === "info_description"){
      theme.description = prop.value;
      }
      if(prop.name === "info_libraries"){
      theme.libraries = prop.value;
      }
      if(prop.name === "info_version"){
      theme.version = prop.value;
      }
      if(prop.name === "info_regions"){
      theme.regions = prop.value;      
      }
      if(prop.name === "info _ckeditor_stylesheets"){
      theme.ckeditor = prop.value;      
      }
    };
}); 
/*
_.each(allProperties, function(prop) {
    // Notice: this is an alternative way to use Lodash templating syntax,
    // that uses string concatenation and the print() function to have
    // more control over the indentation, whitespace, newlines, etc.
    var output = "";
    output += "\t<" + prop.tag + " name=\"" + prop.name + "\">";
    output += prop.value;
    output += "</" + prop.tag + ">";
    if(prop.comment) {
    output += "<!-- " + prop.comment + " -->";
    }
    output += "\n";
    print(output);
});
*/
%>
name: <% print(theme.name) %>
version: <% print(theme.version) %>
type: theme
base theme: false
description: <% print(theme.description) %>
package: <% print(theme.name) %>
core_version_requirement: ^8 || ^9

libraries:<% 
    _.each(theme.libraries, function(library){
      print(`\n  - ${library}`);
    });%>

regions:<%    
    _.each(theme.regions, function(region){
      var name = region.replace(/_|-/g, ' ');
      var splitStr = name.toLowerCase().split(' ');
      for (var i = 0; i < splitStr.length; i++) {
          splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     
      }
      name = splitStr.join(' ');
      print(`\n  - ${region}: '${name}'`);
    });%>
<% if(theme.ckeditor){ %>
ckeditor_stylesheets:<%    
    _.each(theme.ckeditor, function(stylesheet){
      print(`\n  - ${stylesheet}`);
    });  %>
<% } %>
